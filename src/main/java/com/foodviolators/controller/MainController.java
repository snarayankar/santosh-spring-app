package com.foodviolators.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	 // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	@Autowired
	private UserRepository userRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Users n = new Users();
		n.setFirstName(name);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Users> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@GetMapping(path="/deleteAll")
	public Iterable<Users> deleteAllUsers() {
		// This returns a JSON or XML with the users
		userRepository.deleteAll();
		return null;
	}
	
	
	@RequestMapping( value={"/addOne/{name}/{email}"}, method= RequestMethod.POST )
	public ResponseEntity<Iterable<Users>> save( @Validated @PathVariable(value="name") String name, @Validated @PathVariable(value="email") String email) {
			
		Users n = new Users();
		n.setFirstName(name);
		userRepository.save(n);
		
		
		return new ResponseEntity<>(userRepository.findAll(), HttpStatus.OK);
	}
	
	@RequestMapping( value={"/add"}, method= RequestMethod.POST )
	public ResponseEntity<Iterable<Users>> save(  @Validated @RequestBody Users userInfo) {
			
		Users user = new Users();
		user.setFirstName(userInfo.getFirstName());
		user.setLastName(userInfo.getLastName());
		user.setEmail(userInfo.getEmail());
		userRepository.save(user);
		
		
		return new ResponseEntity<>(userRepository.findAll(), HttpStatus.OK);
	}
	
}